/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function f64_as_f32(a: number, b: number): void;
export function str_as_f32(a: number, b: number, c: number): void;
export function add_f32(a: number, b: number, c: number): void;
export function sub_f32(a: number, b: number, c: number): void;
export function div_f32(a: number, b: number, c: number): void;
export function mul_f32(a: number, b: number, c: number): void;
export function rem_f32(a: number, b: number, c: number): void;
export function acos_f32(a: number, b: number): void;
export function acosh_f32(a: number, b: number): void;
export function asin_f32(a: number, b: number): void;
export function asinh_f32(a: number, b: number): void;
export function atan_f32(a: number, b: number): void;
export function atan2_f32(a: number, b: number, c: number): void;
export function atanh_f32(a: number, b: number): void;
export function cbrt_f32(a: number, b: number): void;
export function cos_f32(a: number, b: number): void;
export function cosh_f32(a: number, b: number): void;
export function exp_f32(a: number, b: number): void;
export function exp2_f32(a: number, b: number): void;
export function exp_m1_f32(a: number, b: number): void;
export function hypot_f32(a: number, b: number, c: number): void;
export function ln_f32(a: number, b: number): void;
export function ln_1p_f32(a: number, b: number): void;
export function log_f32(a: number, b: number, c: number): void;
export function log10_f32(a: number, b: number): void;
export function log2_f32(a: number, b: number): void;
export function powf_f32(a: number, b: number, c: number): void;
export function powi_f32(a: number, b: number, c: number): void;
export function recip_f32(a: number, b: number): void;
export function rem_euclid_f32(a: number, b: number, c: number): void;
export function sin_f32(a: number, b: number): void;
export function sinh_f32(a: number, b: number): void;
export function sqrt_f32(a: number, b: number): void;
export function tan_f32(a: number, b: number): void;
export function tanh_f32(a: number, b: number): void;
export function to_degrees_f32(a: number, b: number): void;
export function to_radians_f32(a: number, b: number): void;
export function MIN_f32(a: number): void;
export function MAX_f32(a: number): void;
export function E_f32(a: number): void;
export function FRAC_1_PI_f32(a: number): void;
export function FRAC_2_PI_f32(a: number): void;
export function FRAC_2_SQRT_PI_f32(a: number): void;
export function FRAC_1_SQRT_2_f32(a: number): void;
export function FRAC_PI_2_f32(a: number): void;
export function FRAC_PI_3_f32(a: number): void;
export function FRAC_PI_4_f32(a: number): void;
export function FRAC_PI_6_f32(a: number): void;
export function FRAC_PI_8_f32(a: number): void;
export function LN_2_f32(a: number): void;
export function LN_10_f32(a: number): void;
export function LOG2_E_f32(a: number): void;
export function LOG10_E_f32(a: number): void;
export function LOG10_2_f32(a: number): void;
export function LOG2_10_f32(a: number): void;
export function PI_f32(a: number): void;
export function SQRT_2_f32(a: number): void;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
